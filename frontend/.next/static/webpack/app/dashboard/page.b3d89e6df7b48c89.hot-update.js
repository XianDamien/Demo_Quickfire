"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/dashboard/page",{

/***/ "(app-pages-browser)/./lib/api.ts":
/*!********************!*\
  !*** ./lib/api.ts ***!
  \********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ApiError: function() { return /* binding */ ApiError; },\n/* harmony export */   api: function() { return /* binding */ api; }\n/* harmony export */ });\n/* harmony import */ var _mock_data__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./mock-data */ \"(app-pages-browser)/./lib/mock-data.ts\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js\");\n\nconst API_BASE_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:8000\";\nclass ApiError extends Error {\n    constructor(status, message){\n        super(message);\n        this.status = status;\n        this.name = \"ApiError\";\n    }\n}\nasync function fetchApi(endpoint) {\n    let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n    const url = \"\".concat(API_BASE_URL).concat(endpoint);\n    const response = await fetch(url, {\n        headers: {\n            \"Content-Type\": \"application/json\",\n            ...options.headers\n        },\n        ...options\n    });\n    if (!response.ok) {\n        const errorData = await response.json().catch(()=>({}));\n        throw new ApiError(response.status, errorData.detail || \"HTTP \".concat(response.status, \": \").concat(response.statusText));\n    }\n    return response.json();\n}\nconst api = {\n    // 创建评测任务\n    async createEvaluation (request) {\n        const formData = new FormData();\n        formData.append(\"student_id\", request.student_id);\n        formData.append(\"unit_id\", request.unit_id);\n        formData.append(\"session_index\", request.session_index.toString());\n        formData.append(\"audio_file\", request.audio_file);\n        const response = await fetch(\"\".concat(API_BASE_URL, \"/evaluate/session\"), {\n            method: \"POST\",\n            body: formData\n        });\n        if (!response.ok) {\n            const errorData = await response.json().catch(()=>({}));\n            throw new ApiError(response.status, errorData.detail || \"HTTP \".concat(response.status, \": \").concat(response.statusText));\n        }\n        return response.json();\n    },\n    // 获取任务状态\n    async getTaskStatus (taskId) {\n        if (_mock_data__WEBPACK_IMPORTED_MODULE_0__.USE_MOCK_DATA) {\n            await (0,_mock_data__WEBPACK_IMPORTED_MODULE_0__.delay)(200);\n            const task = _mock_data__WEBPACK_IMPORTED_MODULE_0__.MOCK_TASKS.find((t)=>t.task_id === taskId);\n            if (!task) {\n                throw new ApiError(404, \"Task not found\");\n            }\n            return task;\n        }\n        return fetchApi(\"/evaluate/task/\".concat(taskId));\n    },\n    // 获取所有评测任务列表\n    async getAllTasks () {\n        if (_mock_data__WEBPACK_IMPORTED_MODULE_0__.USE_MOCK_DATA) {\n            await (0,_mock_data__WEBPACK_IMPORTED_MODULE_0__.delay)(500) // 模拟网络延迟\n            ;\n            return _mock_data__WEBPACK_IMPORTED_MODULE_0__.MOCK_TASKS;\n        }\n        return fetchApi(\"/evaluate/tasks\");\n    },\n    // 获取报告详情\n    async getReportDetail (taskId) {\n        if (_mock_data__WEBPACK_IMPORTED_MODULE_0__.USE_MOCK_DATA) {\n            await (0,_mock_data__WEBPACK_IMPORTED_MODULE_0__.delay)(300);\n            const report = _mock_data__WEBPACK_IMPORTED_MODULE_0__.MOCK_REPORTS.find((r)=>r.task_id === taskId);\n            if (!report) {\n                throw new ApiError(404, \"Report not found\");\n            }\n            return report;\n        }\n        return fetchApi(\"/evaluate/report/\".concat(taskId));\n    },\n    // 提交教师反馈\n    async submitTeacherFeedback (feedback) {\n        if (_mock_data__WEBPACK_IMPORTED_MODULE_0__.USE_MOCK_DATA) {\n            await (0,_mock_data__WEBPACK_IMPORTED_MODULE_0__.delay)(800);\n            console.log(\"Mock: Submitted teacher feedback:\", feedback);\n            return {\n                success: true\n            };\n        }\n        return fetchApi(\"/evaluate/feedback\", {\n            method: \"POST\",\n            body: JSON.stringify(feedback)\n        });\n    },\n    // 教师批准评测结果\n    async approveTask (taskId, finalGrade, teacherComment) {\n        if (_mock_data__WEBPACK_IMPORTED_MODULE_0__.USE_MOCK_DATA) {\n            await (0,_mock_data__WEBPACK_IMPORTED_MODULE_0__.delay)(500);\n            console.log(\"Mock: Approved task:\", taskId);\n            return {\n                success: true,\n                approved_at: new Date().toISOString()\n            };\n        }\n        return fetchApi(\"/evaluate/task/\".concat(taskId, \"/approve\"), {\n            method: \"POST\",\n            body: JSON.stringify({\n                task_id: taskId,\n                final_grade: finalGrade,\n                teacher_comment: teacherComment\n            })\n        });\n    },\n    // 批量导出结果\n    async exportResults (taskIds) {\n        const response = await fetch(\"\".concat(API_BASE_URL, \"/evaluate/export\"), {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                task_ids: taskIds\n            })\n        });\n        if (!response.ok) {\n            throw new ApiError(response.status, \"Export failed\");\n        }\n        return response.blob();\n    },\n    // 健康检查\n    async healthCheck () {\n        return fetchApi(\"/health\");\n    }\n};\n\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/api.ts\n"));

/***/ })

});